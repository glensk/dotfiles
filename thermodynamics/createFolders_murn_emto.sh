#!/bin/bash

# following 3 lines must always be present
path=`set | grep BASH_SOURCE | sed 's|.*\"\(.*\)/[^/]*\".*|\1|' | sed '/BASH_SOURCE=/s/.*/\./'`
script=`set | grep BASH_SOURCE | sed 's|.*\".*/\([^/]*\)\".*|\1|' | sed '/BASH_SOURCE=/s/.*/\./'`
options=$*; . $path/utilities/functions.include; checkOptions "-h -help -p -kg -kf -a -f -s"

# small help for options
# space between option and value must be 1
# space between option and Comment or value and Comment must be >2
h=`getOption -h`
if [ $h == True ]; then
  usage $script
  printOptions "-p        create parameters.dat and exit" \
               "-kg       create inp_kgrn template and exit" \
               "-kf       create inp_kfcd template and exit" \
               "-a        create parameters.dat, inp_kgrn and inp_kfcd template and exit" \
               "-f        force template or folder creation even if existing" \
               "-s        print the list of available screening parameters"
  exit
fi

# detailed help
help=`getOption -help`
if [ $help == True ]; then
  details $script
  echo2 "   creates input folders for a EMTO cold curve (T=0K) run with kgrn and kfcd"
  echo2 "   parameters.dat file must be present (generate with -p)"
  echo2 "   inp_kgrn and inp_kfcd templates must be present (generate with -kg -kf or -a)"
  echo2 "   CPA and DLM can be run (on bcc/fcc lattice only) if elem=MIX in parameters.dat"  \
        "   the CPA/DLM input needs to be provided at the bottom of parameters.dat with"     \
        "   element, concentration, a_ and b_screening, and moment (if needed); the"         \
        "   screening parameters are important if species with significant charge transfer"  \
        "   are mixed; in principle, they can be calculated by supercell calculations as"    \
        "   discussed in Phys. Rev. B 51, 5773 (1995); check however the list of previously" \
        "   assessed mixing parameters with $script -s"
  echo2 "   if one wants to add vacancies to a CPA run, one needs to do this explicitly by"  \
        "   using the symbol 'Em' (instead of the element symbol); the concentration of the" \
        "   elements and vacancies must add up to one"
  echo2 "   kgrn and kfcd calculations rely on structural information (Madelungen matrix,"   \
        "   structure constants, and more) which are normally generated by additional"       \
        "   programs (kstr,shape) beforehand; for the structures supported by the present"   \
        "   script (bcc,fcc,hcp,dhcp) the respective structural files have been already"     \
        "   generated and are placed in:" \
        "   $path/utilities/EMTO/{shp,smx}/*.{tfh,mdl,shp}"
  echo2 "   the structural files were generated with convergence parameters (determining"    \
        "   basis set size) that should be sufficient for good accuracy in most runs"        \
        "   \033[31m\033[1mshould problems occur recalculate the structural files to a better convergence\033[0m"  \
        "   Note in this respect that NL=3 (for kstr) is not accurate enough, e.g., in Ni"   \
        "   the energy difference between fcc and hcp is wrong by about 100 meV/atom using"  \
        "   NL=3 for hcp and NL=4 for fcc; using NL=4 for both gives good accuracy"
  echo2 "   typical script sequence (* indicates that Fel can be left out):"                         \
        "    \033[1mcreateFolders_murn_emto.sh\033[0m -a           (adjust parameters.dat)"          \
        "    \033[1mcreateFolders_murn_emto.sh\033[0m"                                               \
        "    submit.sh run.emto.ser.cluster.workdir  (or the local version)"                         \
        "    collectEMTO.sh                          (when finished and inside NxNxNkp_XXeV folder)" \
        "    extractEnergies_emto.sh"                                                                \
        "    getE0KFit.sh -i energies_Tto0K_GGA      (cmpc01)"                                       \
        "    getDebye.sh -e elem/mass                (creates Debye Fqhs)"                           \
        "    getFqhFit.sh                            (cmpc01)"                                       \
        "  * createFolders_elec_emto.sh -a           (in separate folder; adjust parameters.dat)"    \
        "  * createFolders_elec_emto.sh"                                                             \
        "  * submit.sh run.emto.ser.cluster.workdir  (or the local version)"                         \
        "  * collectEMTO.sh                          (when finished and inside NxNxNkp_XXeV folder)" \
        "  * extractFel_emto.sh                      (cmpc01)"                                       \
        "  * getFelFit.sh -p                         (adjust parameters.dat)"                        \
        "  * getFelFit.sh                            (cmpc01)"                                       \
        "    getThermodynamics.sh                    (collect EVinet,Fel_fit,Fqh_fit in separate folder)"
  exit
fi

# check if we are just printing screening parameters
screen=`getOption -s`
if [ $screen == True ]; then
 echo
 cat $path/utilities/cpa_screening_list
 echo "# format: elem a_scr b_scr; one alloy system per line"
 echo "# some systems appear more often with different parameters"
 exit
fi

# if -a option we create all templates and exit
all=`getOption -a`

# check if force overwriting templates or folders
overwrite=`getOption -f`

# if applies create parameters.dat
genPar=`getOption -p`
if [ $genPar == True -o $all == True ]; then
  if [ -e parameters.dat -a $overwrite != True ]; then error "parameters.dat existing; use -f to overwrite"; fi
  echo "
aLats=3.22 3.24 3.26    # Angstrom

elem=Ti                 # Al, Ca, Ti, Fe, etc.; or elem=MIX for running CPA or DLM see additional input at bottom
xc=PBE                  # PBE/PW91/LDA; used only for kgrn; kfcd gives always results for GGA and LDA
type=bcc                # bcc/fcc/hcp/dhcp implemented; hcp and dhcp only for ideal cBya=2*sqrt(6)/3
spinType=NM             # NM, FM, AFM, or DLM (for using input at bottom; only in combination with elem=MIX)
moment=                 # magnetic moment, only relevant for spinType=FM or AFM; NOT used if elem=MIX, then moments are taken from additional input additional input below 

kp=8                    # gives NxNxN for fcc/bcc, NxNxInt(N/cBya) for hcp, and NxNxInt(N/cBya/2) for dhcp
smear=F                 # F or E, for Fermi smearing or T=0K energy (defines the integration type of the Green's function (ZMSH))
sigma=0.1               # Fermi smearing in eV; only relevant for smear=F

addString=              # if changeInp is used it is useful to add some string to folder name; leave blank otherwise
changeInp=              # add additional flags to inp_kgrn, e.g., changeInp=NZ1=32; leave blank if not needed
                        # more flags can be changed by separating them with ;


### additional input for CPA or DLM used only if elem=MIX above
### example input below; see -help option for some details
# element  concentration  a_screening  b_screening  moment
  Fe       0.250          0.796        1.000        2.000
  Fe       0.250          0.796        1.000       -2.000
  Cr       0.250          0.796        1.000        0.500
  Cr       0.250          0.796        1.000       -0.500
# end additional input
" > parameters.dat
  echo; echo "parameters.dat written  <==  mind: parameters.dat needs to be adjusted"
fi

# if applies create inp_kgrn
genKgrn=`getOption -kg`
if [ $genKgrn == True -o $all == True ]; then
  if [ -e inp_kgrn -a $overwrite != True ]; then error "inp_kgrn existing; use -f to overwrite"; fi

  echo "KGRN      HP..= 0
JOBNAM...=out
MSGL.=2 STRT.=A FUNC.=SCA EXPAN=1 FCD.=Y GPM.=N FSM.=N
FOR001=smx.tfh
FOR002=smx.mdl
DIR003=pot/
DIR006=
DIR010=chd/
DIR011=
DIR021=
DIR022=shp
FOR098=ATOM.cfg
Self-consistent EMTO energy volume calculation
**********************************************************************
SCFP:  information for self-consistency procedure:                   *
**********************************************************************
NITER.=100 NLIN.= 31 NCPA.=  7 NPRN....=000000000 
FRC...=  N DOS..=  N OPS..=  N AFM..=?S? CRT..=  M STMP..= A
Lmaxh.=  8 Lmaxt=  4 NFI..= 31 FIXG.=  2 SHF..=  0 SOFC.=  Y
KMSH...= S IBZ..=?I? NKX..=?K? NKY..=?K? NKZ..=?KC? FBZ..=  N
ZMSH...=?Z? NZ1..= 16 NZ2..= 24 NZ3..= 24 NRES.=  4 NZD..=200
DEPTH..=  1.000 IMAGZ.=  0.004 EPS...=  0.200 ELIM..= -1.000
AMIX...=  0.010 VMIX..=   0.70 EFMIX.=  0.900 VMTZ..=  0.000 
TOLE...= 1.d-06 TOLEF.= 1.d-06 TOLCPA= 1.d-06 TFERMI= ?SIG? (K)
SWS....= ?RM? MMOM..=  0.000      
EFGS...=  0.000 HX....=  0.101 NX...=  5 NZ0..= 16 KPOLE=  0
**********************************************************************
Sort:  information for alloy:                                        *
******************************SS-screeining*|***Magnetic structure ***
Symb  IQ  IT ITA NRM  CONC      a_scr b_scr |Teta    Phi    FXM  m(split)
?EL?   1   1   1   1  1.000000  0.760 1.140  0.0000  0.0000  N   ?M?
**********************************************************************
Spin-spiral wave vector:
qx....= 0.000000 qy....= 0.000000 qz....= 0.000000
**********************************************************************
Atom:  information for atomic calculation:                           *
**********************************************************************
IEX...=?XC? NES..= 15 NITER= 50 IWAT.=  0 NPRNA=  0
VMIXATM..=  0.300000 RWAT....=  3.500000 RMAX....= 20.000000
DX.......=  0.030000 DR1.....=  0.001000 TEST....=  1.00E-12
TESTE....=  1.00E-07 TESTY...=  1.00E-08 TESTV...=  1.00E-07
" > inp_kgrn
  echo; echo "inp_kgrn written"
fi

# if applies create inp_kfcd
genKfcd=`getOption -kf`
if [ $genKfcd == True -o $all == True ]; then
  if [ -e inp_kfcd -a $overwrite != True ]; then error "inp_kfcd existing; use -f to overwrite"; fi

  echo "KFCD      HP......=N sno..=100                              
JOBNAM...=out                 MSGL..=  2
STRNAM...=smx
DIR001=./
DIR002=chd/
FOR003=shp
DIR004=./
DIR006=
Lmaxs.= 30 NTH..= 31 NFI..= 61
OVCOR.=  Y UBG..=  N NPRN.=  0 NRM..=  0
" > inp_kfcd
  echo; echo "inp_kfcd written"
  fi

# exit if we created some template
if [ $genPar == True -o $genKgrn == True -o $genKfcd == True -o $all == True ]; then exit; fi

# check if all input files available
input="parameters.dat inp_kgrn inp_kfcd"
for i in $input; do check $i; done

# read in all parameters from parameters.dat
aLats=`get aLats`; kp=`get kp`; addString=`get addString`; elem=`get elem`; type=`get type`; xcType=`get xc`
sigma=`get sigma`; changeInp=`get changeInp`; spinType=`get spinType`; moment=`get moment`; smear=`get smear`
checkInput "$aLats" "$kp" "$smear" "$spinType" "$elem" "$type"

# warning for Ti and Zr
if [ $elem == Ti -o $elem == Zr -o $elem == Hf -o $elem == MIX -o $elem == Mix -o $elem == mix  ]; then
  echo
  echored "WARNING: for Ti and Zr we have found problems in reproducing planewave aLats"
  echored "         this is probably related to the semi-core electrons, but including them did not help"
fi

# structure type dependent constants; ibzStr=symmetry flag; nsites=number of lattice sites in cell
# strFac=conversion factor aLat to volume; kpc=k-points along c axis (relevant for hcp and and dhcp)
pi=3.1415926535
toBohr=1.88972613399683231
cBya=`echo 1 | awk '{printf "%.10f",2*sqrt(6)/3}'` # ideal cBya
case "$type" in
  fcc)  ibzStr="  2"; nsites=1; strFac=4; kpc=$kp;;
  bcc)  ibzStr="  3"; nsites=1; strFac=2; kpc=$kp;;
  hcp)  ibzStr="  4"; nsites=2; strFac=`echo 1 | awk '{printf"%.10f",2/'$cBya'/sin('$pi'/3)}'`; kpc=`echo 1 | awk '{printf("%d",'$kp'/'$cBya')}'`;;
  dhcp) ibzStr="  4"; nsites=4; strFac=`echo 1 | awk '{printf"%.10f",2/'$cBya'/sin('$pi'/3)}'`; kpc=`echo 1 | awk '{printf("%d",'$kp'/'$cBya'/2)}'`;;
  *) error "structure type $type not known";;
esac

# get sigma in case of Fermi smearing
if [ $smear == F ]; then
  if [ "$sigma" == "" ]; then error "smear=F but no sigma in parameters.dat"; fi
else
  sigma=0.0
fi

# check if folder exist and should be overwritten
for a in $aLats; do
  f=$kp\x$kp\x$kpc\kp_$sigma\eV$addString/$a\Ang
  if [ -e $f -a $overwrite != True ]; then
    error "folder $f exists; run with -f option to force overwriting";
  fi
done

# check if inp_kgrn template ok
cc=`cat inp_kgrn | xargs -n1 | sed -n '/?[^?]*?/p' | awk 'END{print NR}'`
if [ $cc != 11 ]; then error "inp_kgrn template wrong"; fi

# spin type
case "$spinType" in
  NM)  spinTypeStr="  P";;
  FM)  spinTypeStr="  F";;
  DLM) spinTypeStr="  F";;
  AFM) error "AFM not implemented yet";;
  *) error "spinType from parameters.dat not known";;
esac

# xc type
case "$xcType" in
  PBE)  xcStr="  7";;
  PW91) xcStr="  9";;
  LDA)  xcStr="  4";;
  *) error "xcType from parameters.dat not known";;
esac

# format parameters
kpStr=`echo $kp | awk '{printf "%3s",$1}'`
kpcStr=`echo $kpc | awk '{printf "%3s",$1}'`
elemStr=`echo $elem | awk '{printf "%-4s",$1}'`
zmshStr=`echo $smear | awk '{printf "%2s",$1}'`
momStr=`echo dummy $moment | awk '{if (NF==2) printf "%.4f",$2; else printf "%.4f", 0}'`
sigmaStr=`echo $sigma | awk '{printf "%6.1f",$1*11604.5061378109385}'` # also eV to Kelvin

# create the input folders
echo; rm -f jobList
for a in $aLats; do
  f=$kp\x$kp\x$kpc\kp_$sigma\eV$addString/$a\Ang
  echo $f; rm -fr $f; mkdir -p $f

  # transform from aLat(Ang) to RMT(Bohr)
  rmStr=`echo $a | awk '{printf "%.4f",(3*($1*'$toBohr')^3/'$strFac'/(4*'$pi'))^(1/3)}'`

  # fill inp_kgrn template with actual parameters
  sed -e 's/?S?/'"$spinTypeStr"'/' \
      -e 's/?K?/'"$kpStr"'/g' \
      -e 's/?KC?/'"$kpcStr"'/g' \
      -e 's/?SIG?/'"$sigmaStr"'/' \
      -e 's/?EL?/'"$elemStr"'/' \
      -e 's/?M?/'"$momStr"'/' \
      -e 's/?Z?/'"$zmshStr"'/' \
      -e 's/?I?/'"$ibzStr"'/' \
      -e 's/?XC?/'"$xcStr"'/' \
      -e 's/?RM?/'"$rmStr"'/' inp_kgrn > $f/inp_kgrn

  # if elem=MIX we are running CPA/DLM; then we exchange the alloy information in inp_kgrn by the one at bottom of parameters.dat
  if [ $elem == MIX -o $elem == Mix -o $elem == mix ]; then
    sed -n '1,/Symb  IQ  IT ITA NRM  CONC/p' $f/inp_kgrn > _tmp_inp
    awk 'BEGIN{f=0;c=0}
         /# element  concentration  a_screening  b_screening  moment/{f=1;next}
         /# end additional input/{f=0}
         f>0{printf "%-4s   1   1 %3d   1  %8.6f % 5.3f %5.3f  0.0000  0.0000  N  %7.4f\n",$1,f,$2,$3,$4,$5; f=f+1; c=c+$2}
         END{print "**********************************************************************";
             if ((c-1)^2>0.0000001) print "concentration ERROR"}' parameters.dat >> _tmp_inp
    if [ "`awk 'END{print}' _tmp_inp`" == "concentration ERROR" ]; then error "concentrations in CPA block do not add up to one"; fi
    sed -n '/Spin-spiral wave vector/,$p' $f/inp_kgrn >> _tmp_inp
    mv _tmp_inp $f/inp_kgrn
  fi

  # repeat the element information for each lattice site; fcc/bcc=1, hcp=2, dhcp=4
  if [ $nsites -gt 1 ]; then
    awk 'BEGIN{f=0}
         f==0{print}
         /Symb  IQ  IT ITA NRM  CONC/{f=1;next}
         /^\*\*\*/{if (f>0) {f=0; print}}
         f>0{for (i=1;i<='$nsites';i++)
          printf "%-4s %3d %3d %3d %3d  %8.6f % 5.3f %5.3f  %6.4f  %6.4f  %1s  %7.4f\n",$1,i,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12}' $f/inp_kgrn >> _tmp_inp
    mv _tmp_inp $f/inp_kgrn
  fi

  if [ -n "$changeInp" ]; then
    error "changeInp not implemented yet"
  fi

  # copy inp_kfcd, structure constants and shape function
  cp inp_kfcd $f/inp_kfcd
  cp $path/utilities/EMTO/smx/$type.tfh $f/smx.tfh
  cp $path/utilities/EMTO/smx/$type.mdl $f/smx.mdl
  cp $path/utilities/EMTO/shp/$type.shp $f/shp
  cp $path/utilities/EMTO/ATOM.cfg $f/

  mkdir $f/pot $f/chd

  echo `pwd`/$f >> jobList
done

echo; echo " jobList file written"

