##echo zshin

gettime="true"
gettime="false"
loadzsh="true"
#loadzsh="false"

if [ "$loadzsh" = "true" ];then
if [ "$gettime" = "true" ];then
    date=`which date`
    [ "`hostname | grep -o mac`" = "mac" ] && date=/usr/local/opt/coreutils/libexec/gnubin/date
    getms() {
        #/usr/local/opt/coreutils/libexec/gnubin/date +%s%N
        $date +%s%N
    }

    gt() {
        ka=$*
        tlast=`echo "$ka" | awk '{print $1}'`
        tnow=`getms`
        diff=`echo $tlast $tnow | awk '{printf "%.1f\n", ($2-$1)/10000000}'`
        echo $tnow $tlast $diff
    }
fi

#tlast=`getms`
[ "$gettime" = "true" ] && gett=`gt getms getms` && echo "zsh0:start: $gett"


#[ "$ZSH_VERSION" = "4.3.10" ] && export FPATH="/usr/share/zsh/4.3.10/functions:$FPATH"  ## this is only for cmmd
#[ "`hostname`" = "cmmc002" ] && eval `/afs/ipp/common/usr/modules.2014/amd64_sles11/Modules/$MODULE_VERSION/bin/modulecmd tcsh !*`  # for cmmc
# in zsh first load compinit and bashcompinit (in first line)
autoload -U colors && colors                    # necessary for prompt colors (0.00s)
[ "$gettime" = "true" ] && gett=`gt $gett` && echo "zsh1:color: $gett"


autoload -U +X compinit && compinit             # (0.03s)  (seems I cant avoid compinit=Necessary)
#autoload -Uz compinit   # is 12-4=8 instad of 16-4=12
#if [ $(date +'%j') != $(stat -f '%Sm' -t '%j' ~/.zcompdump) ]; then
#  compinit
#else
#  compinit -C
#fi

[ "$gettime" = "true" ] && gett=`gt $gett` && echo "zsh1:compi: $gett"
#autoload -Uz compinit
#if [ $(date +'%j') != $(stat -f '%Sm' -t '%j' ~/.zcompdump) ]; then
#  compinit
#else
#  compinit -C
#fi

autoload -U +X bashcompinit && bashcompinit     # make bash completion function work (complete) (0.00s)

[ "$gettime" = "true" ] && gett=`gt $gett` && echo "zsh1:bash : $gett"
#################################################################
# oh-my-zsh: DONT USE IT!!! do this first in zsh; IT IS WAY TOO SLOW!!!!!! DONT USE IT !!!!!
# but the way it colors the history-substring-search is great!
# time zsh (mit  oh-my-zsh): 0.15-0.16 
# time zsh (ohne oh-my-zsh): 0.07-0.07 
# time zsh (mit zsh-syntax-highlighting history-substring-search): 0.14 
#################################################################
# history-substring-search is awesom: write part of the command and then UP
# wd autojump fasd z: to jump around 
# copyfile : copy 
# git: adds aliases 
# extract: Unzip all types of compressed files. extracted this as separete script
# web-search: adds aliases
# for an overwiew and descriptsions: https://github.com/robbyrussell/oh-my-zsh/wiki/Plugins-Overview
#plugins=(web-search osx colored-man python vi-mode wd autojump z colorize copyfile zsh-syntax-highlighting history-substring-search)
plugins=(zsh-syntax-highlighting history-substring-search)
DISABLE_LS_COLORS="true"   # this is necessary to not ignore custom ls aliases
#################################################################
# dotfiles location 
#################################################################
export dotfiles="$HOME/Dropbox/Albert/scripts/dotfiles/"

#################################################################
# oh-my-zsh 
#################################################################
[ "$gettime" = "true" ] && gett=`gt $gett` && echo "zsh1:ohmyl: $gett"
#export ZSH="$dotfiles/zsh/oh-my-zsh"   # has to be loaded after plugins!
#[ ! -e "$ZSH/oh-my-zsh.sh" ] && cd $dotfiles/zsh/ && git clone git://github.com/robbyrussell/oh-my-zsh.git
#[ "$gettime" = "true" ] && gett=`gt $gett` && echo "zsh1:ohmyl: $gett"

#source $ZSH/oh-my-zsh.sh      # has to be loaded after plugins!
#it seems faster to load the plugins manually then via oh-my-zsh
#####################################################################
# SOMEHOW I STILL HAVE A SYNTAX HIGHLIGHTING and SUBSTRING SEARCH EVEN WITHOT LOADING THE FOLLOWING LINES

#source $dotfiles/zsh/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh  # 13timeunits (4without)
#source $dotfiles/zsh/zsh-history-substring-search/zsh-history-substring-search.zsh  # 4timeunits (4without)
[ "$gettime" = "true" ] && gett=`gt $gett` && echo "zsh1:oh-my: $gett"
[ "$gettime" = "true" ] && gett=`gt $gett` && echo "zsh1:oh-m2: $gett"
[ "$gettime" = "true" ] && gett=`gt $gett` && echo "zsh1:oh-m3: $gett"

#################################################################
# declare/initialize PYTHONPATH; has to be before first PYTHONPATH variable
#################################################################
[ -z "$PYTHONPATH" ] && PYTHONPATH=""

#################################################################
# read in general variables on{mac,cmmc,cmmd},printloadstat
#################################################################
# for tcsh    : setenv currentshell tcsh
# for bash/zsh: export currentshell='zsh'
export currentshell='zsh'    # known are zsh / bash / tcsh
export generalrc="$dotfiles/generalrc"
source $generalrc/generalrc_.sh
[ "$gettime" = "true" ] && gett=`gt $gett` && echo "zsh5:MYMYM: $gett https://carlosbecker.com/posts/speeding-up-zsh/"

#######################################################################
# autojump 
# auskommentieren von if command -v brew makes it much faster on mac!
#######################################################################
#source $HOME/.autojump/etc/profile.d/autojump.sh  # =0.005-0.006s
source ~/.autojump/share/autojump/autojump.zsh
alias c='j'
[ "$gettime" = "true" ] && gett=`gt $gett` && echo "zsh6:autoj: $gett"

#export LAMMPS_COMMAND="/usr/local/bin/lmp_serial" #(path to binary file) 
#export LAMMPS_COMMAND="/Users/glensk/miniconda3/bin/lmp_serial" #(path to binary file) 
#export LAMMPS_COMMAND="/Users/glensk/Dropbox/Albert/Google_Drive/scripts_epfl/lammps_cosmo/lammps_macbook_20180814/src/lmp_serial_mac_2018_08_17" #(path to binary file) 
#export LAMMPSPATH="/Users/glensk/Dropbox/Albert/Google_Drive/scripts_epfl/lammps_cosmo/lammps_macbook_20180814"
#export PYTHONPATH="$LAMMPSPATH/python:$PYTHONPATH"
#export LD_LIBRARY_PATH="$LD_LIBRARY_PATH:$LAMMPSPATH/src"


#################################################################
# zsh dependent stuff to use on every system (braucht nur 0.01s)
# - define colors for ls
#################################################################
source $dotfiles/zsh/zsh_set
[ "$gettime" = "true" ] && gett=`gt $gett` && echo "zsh7:zhset: $gett"

#################################################################
# conda / anaconda / miniconda  -> takes too much time when opening new shell
#################################################################
#if [ -e "$HOME/miniconda3" ];then
#    source $HOME/miniconda3/etc/profile.d/conda.sh
#    conda activate # activates the default conda python (3.x)
#fi


[ "$gettime" = "true" ] && gett=`gt $gett` && echo "zsh8:conda: $gett"


# time zsh
# 0) completely empty             : 0.01s
# 1) 0+ autoload colors/bashinit  : 0.01s 
# 1) 1+ autoload compinit         : 0.04s (comptinit) = 0.03s
# 2) 1+ alles before . generalrc  : 0.04s 
# 3) 2+ . generalrc               : 0.05s (generalrc) = 0.011s (from bashrc)
# 4) 3+ zsh_set                   : 0.06s (zsh_set  ) = 0.01s
# 5) 4+ z                         : 0.08s (z        ) = 0.012s (from bashrc)

#@# this is for iterm2!!
#@test -e ${HOME}/.iterm2_shell_integration.zsh && source ${HOME}/.iterm2_shell_integration.zsh
#@#source ~/.iterm2_shell_integration.`basename $SHELL`
#@#################################################################
#@# after this file ~/.zlogin is loaded 
#@#################################################################
#echo zshout
fi
